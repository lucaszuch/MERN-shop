[{"D:\\codecademy\\react\\MERN-shop\\client\\src\\index.js":"1","D:\\codecademy\\react\\MERN-shop\\client\\src\\components\\NavBar\\NavBar.js":"2","D:\\codecademy\\react\\MERN-shop\\client\\src\\components\\Footer\\Footer.js":"3","D:\\codecademy\\react\\MERN-shop\\client\\src\\Store.js":"4","D:\\codecademy\\react\\MERN-shop\\client\\src\\reducers\\productReducers.js":"5","D:\\codecademy\\react\\MERN-shop\\client\\src\\actions\\productActions.js":"6","D:\\codecademy\\react\\MERN-shop\\client\\src\\contants\\productConstants.js":"7","D:\\codecademy\\react\\MERN-shop\\client\\src\\reducers\\cartReducers.js":"8","D:\\codecademy\\react\\MERN-shop\\client\\src\\contants\\cartConstants.js":"9","D:\\codecademy\\react\\MERN-shop\\client\\src\\actions\\cartActions.js":"10","D:\\codecademy\\react\\MERN-shop\\client\\src\\reducers\\userReducers.js":"11","D:\\codecademy\\react\\MERN-shop\\client\\src\\contants\\userContants.js":"12","D:\\codecademy\\react\\MERN-shop\\client\\src\\actions\\userActions.js":"13","D:\\codecademy\\react\\MERN-shop\\client\\src\\components\\CheckoutSteps\\CheckoutSteps.js":"14","D:\\codecademy\\react\\MERN-shop\\client\\src\\App\\App.js":"15","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\ProductScreen.js":"16","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\CartScreen.js":"17","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\ShippingScreen.js":"18","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\PaymentScreen.js":"19","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\PlaceOrderScreen.js":"20","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\SigninScreen.js":"21","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\RegisterScreen.js":"22","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\ContactScreen.js":"23","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\AboutScreen.js":"24","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\ShopScreen.js":"25"},{"size":268,"mtime":1611420896075,"results":"26","hashOfConfig":"27"},{"size":2005,"mtime":1611426214726,"results":"28","hashOfConfig":"27"},{"size":315,"mtime":1610730321934,"results":"29","hashOfConfig":"27"},{"size":1021,"mtime":1611416334809,"results":"30","hashOfConfig":"27"},{"size":1034,"mtime":1611160121091,"results":"31","hashOfConfig":"27"},{"size":977,"mtime":1611187084907,"results":"32","hashOfConfig":"27"},{"size":525,"mtime":1611342983252,"results":"33","hashOfConfig":"27"},{"size":932,"mtime":1611418454034,"results":"34","hashOfConfig":"27"},{"size":404,"mtime":1611414905730,"results":"35","hashOfConfig":"27"},{"size":1418,"mtime":1611415065813,"results":"36","hashOfConfig":"27"},{"size":1128,"mtime":1611420628222,"results":"37","hashOfConfig":"27"},{"size":580,"mtime":1611420005539,"results":"38","hashOfConfig":"27"},{"size":1387,"mtime":1611420224455,"results":"39","hashOfConfig":"27"},{"size":495,"mtime":1611413425650,"results":"40","hashOfConfig":"27"},{"size":1674,"mtime":1611424690757,"results":"41","hashOfConfig":"27"},{"size":3343,"mtime":1611421561170,"results":"42","hashOfConfig":"27"},{"size":3535,"mtime":1611421815325,"results":"43","hashOfConfig":"27"},{"size":2271,"mtime":1611421531908,"results":"44","hashOfConfig":"27"},{"size":1624,"mtime":1611421826663,"results":"45","hashOfConfig":"27"},{"size":3613,"mtime":1611421795851,"results":"46","hashOfConfig":"27"},{"size":2600,"mtime":1611421581308,"results":"47","hashOfConfig":"27"},{"size":3306,"mtime":1611421568095,"results":"48","hashOfConfig":"27"},{"size":2607,"mtime":1611506760772,"results":"49","hashOfConfig":"27"},{"size":1091,"mtime":1611424535368,"results":"50","hashOfConfig":"27"},{"size":1724,"mtime":1611424610839,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w9ijtj",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\codecademy\\react\\MERN-shop\\client\\src\\index.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\components\\NavBar\\NavBar.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\components\\Footer\\Footer.js",[],["109","110"],"D:\\codecademy\\react\\MERN-shop\\client\\src\\Store.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\reducers\\productReducers.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\actions\\productActions.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\contants\\productConstants.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\reducers\\cartReducers.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\contants\\cartConstants.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\actions\\cartActions.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\reducers\\userReducers.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\contants\\userContants.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\actions\\userActions.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\components\\CheckoutSteps\\CheckoutSteps.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\App\\App.js",["111"],"D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\ProductScreen.js",["112"],"import React ,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\n//Provisional image\r\nimport backpack from '../components/Images/backpack.JPG';\r\n\r\n//Importing external files or hooks\r\nimport './ProductScreen.css';\r\nimport {detailsProduct} from '../actions/productActions';\r\n\r\n//Main function\r\nfunction ProductScreen(props) {\r\n  //Setting qty hooks\r\n  const [qty, setQty] = useState(() => {\r\n    return 1;\r\n  });\r\n\r\n  //Redux hook\r\n  const productDetails = useSelector(state => state.productDetails);\r\n  const {product, loading, error} = productDetails;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(detailsProduct(props.match.params.id));\r\n  }, []);\r\n\r\n  const handleAddToCart = () => {\r\n    props.history.push(`/cart/${props.match.params.id}?qty=${qty}`);\r\n  }\r\n\r\n    return (\r\n      loading ? <div>Loading..</div> :\r\n      error ? <div>error</div> :\r\n        <main>\r\n          <div className=\"back-result\">\r\n            <div className=\"back-result-btn\">\r\n              <Link to=\"/\">Return to Shop</Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"productScreen-box\">\r\n            <div className=\"productScreen-image\">\r\n              <img src={backpack} alt={product.image} />\r\n            </div>\r\n            <div className=\"productScreen-name\">\r\n              <h2>{product.name}</h2>\r\n            </div>\r\n            <div className=\"productScreen-brand\">\r\n              <h4>{product.brand}</h4>\r\n            </div>\r\n            <div className=\"productScreen-description\">\r\n              <p>{product.descrition}</p>\r\n            </div>\r\n            <div className=\"productScreen-price\">\r\n              <h2>Price ${product.price}</h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"basket-box\">\r\n            <div className=\"basket-info\">\r\n              <div className=\"basket-text\">\r\n                <h2>Add to the basket</h2>\r\n              </div>\r\n              <div className=\"basket-quantity\">\r\n                <label for=\"quantity\">Select quantity:</label>\r\n                {/* If stock available, displays options, otherwise displays message */}\r\n                {product.countStock > 0 ?\r\n                <select name=\"quantity\"\r\n                value={qty}\r\n                onChange={e => [setQty(e.target.value)]}\r\n                >\r\n                {[...Array(product.countStock).keys()].map(item =>\r\n                    <option value={item + 1}\r\n                            key={item + 1}>\r\n                              {item + 1}\r\n                    </option>)}\r\n                </select> : \r\n                <div className=\"message-stock\">\r\n                  Not available, apologies.\r\n                </div>\r\n                }\r\n              </div>\r\n                {/* Changes the button according to availability */}\r\n                {product.countStock > 0 ?\r\n                  <button className=\"btn-basket\"\r\n                  type=\"button\"\r\n                  onClick={handleAddToCart}>\r\n                  ADD TO THE CART\r\n                  </button> :\r\n                  <button className=\"btn-outStock\">\r\n                  OUT OF STOCK\r\n                  </button>}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        )\r\n    }\r\n\r\nexport default ProductScreen;","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\CartScreen.js",["113","114"],"import React, {useEffect, useState} from 'react';\r\nimport {addToCart, removeFromCart} from '../actions/cartActions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//Importing\r\nimport './CartScreen.css';\r\nimport backpack from '../components/Images/backpack.JPG';\r\n\r\nfunction CartScreen(props) {\r\n  //Redux hooks\r\n  const cart = useSelector(state => state.cart);\r\n  const {cartItems} = cart;\r\n  const productId = props.match.params.id;\r\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n  const dispatch = useDispatch();\r\n\r\n  //Handlers\r\n  const handleCartRemove = (productId) => {\r\n    dispatch(removeFromCart(productId));\r\n  }\r\n\r\n  const handleCheckout = () => {\r\n    props.history.push(`/signin?redirect=shipping`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"cart-wrapper\">\r\n        <div className=\"cart-title\">\r\n          <h1>BASKET</h1>\r\n        </div>\r\n        {\r\n          cartItems.length === 0 ?\r\n          <div className=\"empty-cart\">\r\n            Your cart is empty.\r\n          </div>\r\n          :\r\n          cartItems.map(item => \r\n            \r\n              <div className=\"itemList-wrapper\">\r\n                <div className=\"itemList-box\">\r\n                  <div className=\"itemList-details\">\r\n                    <div className=\"itemList-img\">\r\n                      <img src={backpack} alt=\"please, replace\"/>\r\n                    </div>\r\n                    <div className=\"itemList-info\">\r\n                      <Link to={`/product/${item.product}`}>\r\n                        {item.name}\r\n                      </Link>                    \r\n                      <div className=\"itemList-qty\">\r\n                        <div className=\"itemList-qty-labels\">\r\n                          <label for=\"itemList-qty\">Quantity:</label>\r\n                          <select name=\"itemList-qty\"\r\n                                  value={item.qty}\r\n                                  onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                          </select>\r\n                        </div>\r\n                        <button className=\"btn-remove\"\r\n                                type=\"button\"\r\n                                onClick={() => handleCartRemove(item.product)}>\r\n                            REMOVE\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"itemList-price\">\r\n                    <h3>Price: ${item.price}</h3>\r\n                  </div>\r\n              </div>\r\n            </div>         \r\n          )\r\n        } \r\n        <div className=\"checkout-wrapper\">\r\n          <div className=\"checkout-title\">\r\n            <h2>Subtotal</h2>\r\n          </div>\r\n          <div className=\"checkout-info\">\r\n            <h3>Number of items: {cartItems.reduce((a, c) => a + c.qty, 0)}</h3>\r\n            <h3>Total: ${cartItems.reduce((a, c) => a + c.price * c.qty, 0)}</h3>\r\n          </div>\r\n          <button className=\"btn-complete\"\r\n                  type=\"button\"\r\n                  onClick={handleCheckout}>\r\n            COMPLETE ORDER\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default CartScreen;","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\ShippingScreen.js",["115"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveShipping } from '../actions/cartActions';\r\n\r\n//Importing external files\r\nimport './RegisterScreen.css';\r\nimport CheckoutSteps from '../components/CheckoutSteps/CheckoutSteps';\r\n\r\nfunction ShippingScreen(props) {\r\n\r\n  //Local hooks\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [postcode, setPostcode] = useState('');\r\n\r\n  //Redux hooks\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShipping({address, city, postcode}));\r\n    props.history.push('/payment');\r\n  }\r\n  return (\r\n    <main>\r\n      <div>\r\n        <CheckoutSteps step1 step2></CheckoutSteps>\r\n      </div>\r\n    <div className=\"shipping-wrapper\">\r\n      <div className=\"shipping-title\">\r\n          <h1>SHIPPING</h1>\r\n      </div>\r\n      <div className=\"shipping-wrapper\">\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"shipping-address\">\r\n            <label htmlFor=\"address\">Name</label>\r\n            <input type=\"text\"\r\n                   name=\"address\"\r\n                   id=\"address\"\r\n                   onChange={(e) => setAddress(e.target.value)}\r\n                   >\r\n            </input>\r\n          </div>\r\n          <div className=\"shipping-city\">\r\n            <label htmlFor=\"city\">Email</label>\r\n            <input type=\"text\"\r\n                  name=\"city\"\r\n                  id=\"city\"\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                  >\r\n            </input>\r\n          </div>\r\n          <div className=\"shipping-postcode\">\r\n          <label htmlFor=\"postcode\">Password</label>\r\n            <input type=\"text\"\r\n                  name=\"postcode\"\r\n                  id=\"postcode\"\r\n                  onChange={(e) => setPostcode(e.target.value)}\r\n                  >\r\n            </input>\r\n          </div>\r\n          <div className=\"shipping-btn\">\r\n            <button type=\"submit\"\r\n                    className=\"btn-signin\">\r\n                      NEXT\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </main>\r\n  )\r\n}\r\nexport default ShippingScreen;\r\n","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\PaymentScreen.js",["116"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { savePayment } from '../actions/cartActions';\r\n\r\n//Importing external files\r\nimport './RegisterScreen.css';\r\nimport CheckoutSteps from '../components/CheckoutSteps/CheckoutSteps';\r\n\r\nfunction PaymentScreen(props) {\r\n\r\n  //Local hooks\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n  \r\n  //Redux hooks\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePayment({paymentMethod}));\r\n    props.history.push('/placeorder');\r\n  }\r\n  return (\r\n    <main>\r\n      <div>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      </div>\r\n    <div className=\"shipping-wrapper\">\r\n      <div className=\"shipping-title\">\r\n          <h1>PAYMENT</h1>\r\n      </div>\r\n      <div className=\"shipping-wrapper\">\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"shipping-address\">\r\n            <label htmlFor=\"address\">Paypal</label>\r\n            <input type=\"radio\"\r\n                   name=\"paymentMethod\"\r\n                   id=\"paymentMethod\"\r\n                   value=\"paypal\"\r\n                   onChange={(e) => setPaymentMethod(e.target.value)}\r\n                   >\r\n            </input>\r\n          </div>\r\n          \r\n          <div className=\"shipping-btn\">\r\n            <button type=\"submit\"\r\n                    className=\"btn-signin\">\r\n                      NEXT\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </main>\r\n  )\r\n}\r\nexport default PaymentScreen;\r\n","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\PlaceOrderScreen.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\SigninScreen.js",["117"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { signin } from '../actions/userActions'\r\n\r\n//Importing external files\r\nimport './SigninScreen.css';\r\n\r\nfunction SigninScreen(props) {\r\n\r\n  //Local hooks\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  //Redux hooks\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin;\r\n  const dispatch = useDispatch();\r\n  const redirect = props.location.search ? props.location.search.split('=')[1] :'/'\r\n  \r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [userInfo]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signin(email, password));\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"signin-wrapper\">\r\n        <div className=\"signin-title\">\r\n            <h1>SIGN-IN</h1>\r\n        </div>\r\n        <div className=\"userForm-wrapper\">\r\n          <div className=\"userForm-loading\">\r\n            {loading && <div>Loading..</div>}\r\n            {error && <div>{error}</div>}\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"userForm-email\">\r\n              <label htmlFor=\"userEmail\">Email</label>\r\n              <input type=\"email\"\r\n                    name=\"userEmail\"\r\n                    id=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n              </input>\r\n            </div>\r\n            <div className=\"userForm-password\">\r\n            <label htmlFor=\"userPassword\">Password</label>\r\n              <input type=\"password\"\r\n                    name=\"userPassword\"\r\n                    id=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n              </input>\r\n            </div>\r\n            <div className=\"userForm-btn\">\r\n              <button type=\"submit\"\r\n                      className=\"btn-signin\">\r\n                        SIGN IN\r\n              </button>\r\n            </div>\r\n            <div className=\"userForm-newUserText\">\r\n              <h3>New to All Dee's?</h3>\r\n            </div>\r\n            <div className=\"userForm-newUserLink\">\r\n              <Link to={redirect === '/' ? 'register' : `register?redirect=${redirect}`}>CREATE ACCOUNT</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\nexport default SigninScreen;","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\RegisterScreen.js",["118","119"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from '../actions/userActions';\r\n\r\n//Importing external files\r\nimport './RegisterScreen.css';\r\n\r\nfunction RegisterScreen(props) {\r\n\r\n  //Local hooks\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [rePassword, setRePassword] = useState('');\r\n\r\n  //Redux hooks\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const { loading, userInfo, error } = userRegister;\r\n  const dispatch = useDispatch();\r\n  const redirect = props.location.search ? props.location.search.split('=')[1] :'/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [userInfo]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, email, password));\r\n  }\r\n  return (\r\n    <main>\r\n    <div className=\"register-wrapper\">\r\n      <div className=\"register-title\">\r\n          <h1>CREATE ACCOUNT</h1>\r\n      </div>\r\n      <div className=\"register-wrapper\">\r\n        <div className=\"register-loading\">\r\n          {loading && <div>Loading..</div>}\r\n          {error && <div>{error}</div>}\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"register-name\">\r\n            <label htmlFor=\"userName\">Name</label>\r\n            <input type=\"text\"\r\n                   name=\"userName\"\r\n                   id=\"name\"\r\n                   onChange={(e) => setName(e.target.value)}\r\n                   >\r\n            </input>\r\n          </div>\r\n          <div className=\"register-email\">\r\n            <label htmlFor=\"userEmail\">Email</label>\r\n            <input type=\"email\"\r\n                  name=\"userEmail\"\r\n                  id=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  >\r\n            </input>\r\n          </div>\r\n          <div className=\"register-password\">\r\n          <label htmlFor=\"userPassword\">Password</label>\r\n            <input type=\"password\"\r\n                  name=\"userPassword\"\r\n                  id=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  >\r\n            </input>\r\n          </div>\r\n          <div className=\"register-repassword\">\r\n          <label htmlFor=\"userRePassword\">Confirm password</label>\r\n            <input type=\"password\"\r\n                  name=\"userRePassword\"\r\n                  id=\"Repassword\"\r\n                  onChange={(e) => setRePassword(e.target.value)}\r\n                  >\r\n            </input>\r\n          </div>\r\n          <div className=\"register-btn\">\r\n            <button type=\"submit\"\r\n                    className=\"btn-signin\">\r\n                      CREATE ACCOUNT\r\n            </button>\r\n          </div>\r\n          <div className=\"register-newUserText\">\r\n            <h3>Already registered?</h3>\r\n          </div>\r\n          <div className=\"register-newUserLink\">\r\n            <Link to={redirect === '/' ? 'signin' : `signin?redirect=${redirect}`}>LOGIN</Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </main>\r\n  )\r\n}\r\nexport default RegisterScreen;\r\n","D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\ContactScreen.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\AboutScreen.js",[],"D:\\codecademy\\react\\MERN-shop\\client\\src\\Screens\\ShopScreen.js",["120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":16,"nodeType":"127","messageId":"128","endLine":2,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":26,"column":6,"nodeType":"131","endLine":26,"endColumn":8,"suggestions":"132"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":35},{"ruleId":"129","severity":1,"message":"133","line":31,"column":6,"nodeType":"131","endLine":31,"endColumn":8,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"135","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":14},{"ruleId":"125","severity":1,"message":"135","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"136","line":28,"column":6,"nodeType":"131","endLine":28,"endColumn":16,"suggestions":"137"},{"ruleId":"125","severity":1,"message":"138","line":15,"column":10,"nodeType":"127","messageId":"128","endLine":15,"endColumn":20},{"ruleId":"129","severity":1,"message":"136","line":30,"column":6,"nodeType":"131","endLine":30,"endColumn":16,"suggestions":"139"},{"ruleId":"129","severity":1,"message":"140","line":21,"column":6,"nodeType":"131","endLine":21,"endColumn":8,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["145"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["146"],"'rePassword' is assigned a value but never used.",["147"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"153","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"158","text":"159"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"160","text":"161"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"162","text":"163"},{"range":"164","text":"163"},"Update the dependencies array to be: [dispatch]",{"range":"165","text":"166"},[754,756],"[dispatch, props.match.params.id]",[914,916],"[dispatch, productId, qty]",[792,802],"[props.history, redirect, userInfo]",[897,907],[578,580],"[dispatch]"]